{
  "openapi": "3.0.0",
  "info": {
    "title": "Final Project Kelompok 3 - Beirut",
    "description": "Create a restaurant payment/cashier system with discount and member feature. \nHere is our repository [Final Project Repo](https://github.com/fabs90/final-project-kelompok-3-beirut/tree/main).\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Main server"
    }
  ],
  "tags": [
    {
      "name": "Restaurant",
      "description": "Everything about restaurant menu and checkout API"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Get list of menu",
        "description": "Returns list of menu in the restaurant",
        "responses": {
          "200": {
            "description": "List of menu",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "judul": {
                      "type": "string",
                      "description": "A welcome message",
                      "example": "LIST MAKANAN KAMI:"
                    },
                    "menu": {
                      "type": "string",
                      "example": [
                        {
                          "name": "Mie Ayam",
                          "price": 12000
                        },
                        {
                          "name": "Bakso",
                          "price": 15000
                        },
                        {
                          "name": "Ayam Goreng",
                          "price": 20000
                        },
                        {
                          "name": "Ayam Bakar",
                          "price": 20000
                        },
                        {
                          "name": "Nasi Goreng",
                          "price": 15000
                        },
                        {
                          "name": "Mie Goreng",
                          "price": 12000
                        },
                        {
                          "name": "Mie Rebus",
                          "price": 12000
                        },
                        {
                          "name": "Es Teh",
                          "price": 6000
                        },
                        {
                          "name": "Es Jeruk",
                          "price": 6000
                        },
                        {
                          "name": "Es Buah",
                          "price": 10000
                        },
                        {
                          "name": "Teh Anget",
                          "price": 5000
                        },
                        {
                          "name": "Jeruk Anget",
                          "price": 5000
                        },
                        {
                          "name": "Es Soda Sedih",
                          "price": 10000
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Store and calculate total price.",
        "description": "This endpoint calculates the total price based on selected items, membership status, and payment.\nIt also applies discounts if the user is a member or if the total exceeds a certain threshold.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "selectedItems": {
                    "type": "array",
                    "description": "List of items the user selected for checkout",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Mie Ayam",
                      "Es Teh",
                      "Bakso"
                    ]
                  },
                  "isMember": {
                    "type": "boolean",
                    "description": "Indicates if the user is a member for discount purposes",
                    "example": true
                  },
                  "payment": {
                    "type": "number",
                    "description": "The amount of money the user paid",
                    "example": 50000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful calculation of total price",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalBelanja": {
                      "type": "number",
                      "description": "The total amount before discount",
                      "example": 50000
                    },
                    "totalDiskon": {
                      "type": "number",
                      "description": "The total discount applied",
                      "example": 5000
                    },
                    "totalSetelahDiskon": {
                      "type": "number",
                      "description": "The total amount after discount",
                      "example": 45000
                    },
                    "payment": {
                      "type": "number",
                      "description": "The payment amount provided by the user",
                      "example": 50000
                    },
                    "kembalian": {
                      "type": "number",
                      "description": "The change returned to the user",
                      "example": 5000
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, such as missing or malformed data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid request body. Please provide valid selectedItems as array, isMember, and payment."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}